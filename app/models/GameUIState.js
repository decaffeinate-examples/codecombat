/*
 * decaffeinate suggestions:
 * DS102: Remove unnecessary code created because of implicit returns
 * DS206: Consider reworking classes to avoid initClass
 * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md
 */
let GameUIState;
const CocoModel = require('./CocoModel');

module.exports = (GameUIState = (function() {
  GameUIState = class GameUIState extends CocoModel {
    static initClass() {
      this.className = 'GameUIState';
      this.schema = {
        type: 'object',
        properties: {
        
          canDragCamera: {
            type: 'boolean',
            description: 'Serves as a lock to enable or disable camera movement.'
          },
        
          selected: {
            // TODO: Turn this into a collection which can be listened to? With Thang models.
            type: 'object',
            description: 'Array of selected thangs',
            properties: {
              sprite: { description: 'Lank instance' },
              thang: { description: 'Thang object generated by the world' }
            }
          }
        }
      };
    }

    defaults() { return {
      selected: [],
      canDragCamera: true,
      realTimeInputEvents: new Backbone.Collection()
    }; }
  };
  GameUIState.initClass();
  return GameUIState;
})());
